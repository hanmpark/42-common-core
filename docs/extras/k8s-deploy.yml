---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
data:
  GF_SECURITY_ADMIN_USER: admin
  GF_SECURITY_ADMIN_PASSWORD: X
  JWT_SECRET: X
  POSTGRES_DB: transcendence
  POSTGRES_USER: transcendence
  POSTGRES_PASSWORD: X
  OAUTH2_CLIENT_ID: u-s4t2ud-X
  OAUTH2_CLIENT_SECRET: s-s4t2ud-X
  OAUTH2_REDIRECT_URI: https://trans.propelapp.dev/api/v1/auth/42/callback
  RESEND_API_KEY: X
  PLIVO_AUTHID: X
  PLIVO_AUTHTOKEN: X
  WEBHOOK_DISCORD: https://canary.discord.com/api/webhooks/X/X-X-X
  BASE_URL: https://trans.propelapp.dev

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-data
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: nfs-client
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: exports-data
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: nfs-client
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres
          envFrom:
            - configMapRef:
                name: app-config
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-data

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  ports:
    - port: 5432

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: rg.fr-par.scw.cloud/evansh/frontend:latest
          envFrom:
            - configMapRef:
                name: app-config

---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  selector:
    app: frontend
  ports:
    - port: 3000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: rg.fr-par.scw.cloud/evansh/backend:latest
          envFrom:
            - configMapRef:
                name: app-config
          volumeMounts:
            - name: exports-storage
              mountPath: /exports
      volumes:
        - name: exports-storage
          persistentVolumeClaim:
            claimName: exports-data

---
apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  selector:
    app: backend
  ports:
    - port: 8000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gameserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gameserver
  template:
    metadata:
      labels:
        app: gameserver
    spec:
      containers:
        - name: gameserver
          image: rg.fr-par.scw.cloud/evansh/gameserver:latest
          envFrom:
            - configMapRef:
                name: app-config

---
apiVersion: v1
kind: Service
metadata:
  name: gameserver
spec:
  selector:
    app: gameserver
  ports:
    - port: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: harvester
spec:
  replicas: 1
  selector:
    matchLabels:
      app: harvester
  template:
    metadata:
      labels:
        app: harvester
    spec:
      containers:
        - name: harvester
          image: rg.fr-par.scw.cloud/evansh/harvester:latest
          envFrom:
            - configMapRef:
                name: app-config
          volumeMounts:
            - name: exports-storage
              mountPath: /exports
      volumes:
        - name: exports-storage
          persistentVolumeClaim:
            claimName: exports-data

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: deploy-sa

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: deploy-role
rules:
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: deploy-rolebinding
subjects:
- kind: ServiceAccount
  name: deploy-sa
roleRef:
  kind: Role
  name: deploy-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: deploy
  template:
    metadata:
      labels:
        app: deploy
    spec:
      serviceAccountName: deploy-sa
      containers:
        - name: deploy
          image: rg.fr-par.scw.cloud/evansh/deploy:latest
          envFrom:
            - configMapRef:
                name: app-config
          ports:
            - containerPort: 5000

---
apiVersion: v1
kind: Service
metadata:
  name: deploy
spec:
  selector:
    app: deploy
  ports:
    - port: 5000
      targetPort: 5000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: trans-propelapp-dev-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
spec:
  rules:
    - host: trans.propelapp.dev
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend
                port:
                  number: 3000
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: backend
                port:
                  number: 8000
          - path: /game
            pathType: Prefix
            backend:
              service:
                name: gameserver
                port:
                  number: 8080
          - path: /rollout
            pathType: Prefix
            backend:
              service:
                name: deploy
                port:
                  number: 5000
  tls:
    - hosts:
        - trans.propelapp.dev
      secretName: trans-propelapp-dev-tls
