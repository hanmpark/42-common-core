import React, { useContext, useState } from "react";
import { useNavigate } from "react-router-dom";
import {
	AuthenticationSection,
	AuthButton,
	FormContainer,
	Input,
	ErrorMessage
} from "./styles/Authentication.styled";
import { AvailablePlatformsContainer, PlatformButton } from "./styles/TwoFactorAuth.styled";
import { ApiLogin } from "../../api/auth";
import { AuthContext } from "../../context/AuthContext";

const TwoFactorAuth = ({ username, password, setIsTwoFactorAuth, availablePlatforms }) => {
	const navigate = useNavigate();
	const { setIsLoggedIn } = useContext(AuthContext);
	const [authCode, setAuthCode] = useState("");
	const [error, setError] = useState("");
	const [loading, setLoading] = useState(!authCode);

	console.log(availablePlatforms);

	const handleChange = (e) => {
		setAuthCode(e.target.value);
		setLoading(!e.target.value);
	};

	const handlePlatform = (platform) => {
		console.log('chosen platform:', platform);
		// WAITING FOR API
	}

	const handleSubmit = (e) => {
		e.preventDefault();
		setLoading(true);
		setError("");

		ApiLogin(username, password, authCode)
			.then(() => {
				setIsLoggedIn(true);
				navigate("/");
			})
			.catch((err) => {
				console.error(err);
				setError(err.response.data.error);
			});
	  };

	return (
		<AuthenticationSection>
			<FormContainer onSubmit={handleSubmit}>
				<h1>Two Factor Authentication</h1>
				<p>Enter the 6-digit code generated by your authentication app.</p>
				<Input
					type="text"
					id="authCode"
					placeholder="Enter 6-digit authentication code"
					value={authCode}
					onChange={handleChange}
				/>

				{error && <ErrorMessage>{error}</ErrorMessage>}

				<AvailablePlatformsContainer>
					{availablePlatforms ? availablePlatforms.map((platform) => (
						<PlatformButton
							key={platform}
							type="button"
							onClick={handlePlatform(platform)}
						>
							{platform === "app" && <i className="bi bi-phone-fill"/>}
							{platform === "email" && <i className="bi bi-envelope-fill"/>}
						</PlatformButton>
					)) : (
						<p>No Available Platforms...</p>
					)}
				</AvailablePlatformsContainer>

				<AuthButton type="submit" disabled={loading}>
					Verify
				</AuthButton>
				<AuthButton type="AuthButton" onClick={() => setIsTwoFactorAuth(false)}>
					Back
				</AuthButton>
			</FormContainer>
		</AuthenticationSection>
	);
};

export default TwoFactorAuth;
