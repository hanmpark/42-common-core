import React, { useContext, useState } from "react";
import { useNavigate } from "react-router-dom";
import axios from "axios";
import { ApiLogin } from "../../api/auth";
import logger from "../../api/logger";
import { AuthContext } from "../../context/AuthContext";
import OTPInputComponent from "./OTPInput";
import {
	FormContainer,
	ErrorMessage
} from "./styles/Authentication.styled";
import { AvailablePlatformsContainer, PlatformButton } from "./styles/TwoFactorAuth.styled";
import PongButton from "../../styles/shared/PongButton.styled";

const TwoFactorAuthSignIn = ({ username, password, setIsTwoFactorAuth, availablePlatforms }) => {
	const navigate = useNavigate();
	const { setIsLoggedIn } = useContext(AuthContext);
	const [authCode, setAuthCode] = useState("");
	const [disableVerify, setDisableVerify] = useState(!authCode);
	const [error, setError] = useState("");

	const handlePlatform = (platform) => {
		axios.post('/api/v1/auth/totp/request', { username, password, platform })
			.then(() => {
				logger('2FA: Request sent');
			})
			.catch(err => {
				logger('2FA: Request failed');
				setError(err.response.data.error);
			});
	};

	const handleSubmit = (e) => {
		e.preventDefault();
		setDisableVerify(true);
		setError("");

		ApiLogin(username, password, authCode)
			.then(() => {
				setIsLoggedIn(true);
				navigate("/");
			})
			.catch((err) => {
				setError(err.response.data.error);
			});
	};

	return (
		<FormContainer onSubmit={handleSubmit}>
			<h1>Two Factor Authentication</h1>
			<p>Enter the 6-digit code generated by your achosen platform.</p>

			<OTPInputComponent setAuthCode={setAuthCode} setDisableVerify={setDisableVerify}/>

			{error && <ErrorMessage>{error}</ErrorMessage>}

			<AvailablePlatformsContainer>
				{availablePlatforms ? availablePlatforms.filter(platform => platform !== 'app').map((platform) => (
					<PlatformButton
						key={platform}
						type="button"
						onClick={() => handlePlatform(platform)}
					>
						{platform === "email" && <i className="bi bi-envelope-fill"/>}
						{platform === "sms" && <i className="bi bi-chat-left-text-fill"/>}
					</PlatformButton>
				)) : (
					<p>No Available Platforms...</p>
				)}
			</AvailablePlatformsContainer>

			<PongButton type="submit" disabled={disableVerify}>
				Verify
			</PongButton>
			<PongButton type="AuthButton" onClick={() => setIsTwoFactorAuth(false)}>
				Back
			</PongButton>
		</FormContainer>
	);
};

export default TwoFactorAuthSignIn;
