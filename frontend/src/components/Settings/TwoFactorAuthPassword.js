import React, { useEffect, useState } from 'react';
import API from '../../api/api';
import logger from '../../api/logger';
import OTPInputComponent from '../Auth/OTPInput';
import { AuthButton, ErrorMessage, FormContainer } from '../Auth/styles/Authentication.styled';
import { AvailablePlatformsContainer, PlatformButton } from '../Auth/styles/TwoFactorAuth.styled';

const TwoFactorAuthPassword = ({ onSubmit, setIsTwoFactorAuth }) => {
	const [availablePlatforms, setAvailablePlatforms] = useState([]);
	const [authCode, setAuthCode] = useState('');
	const [disableVerify, setDisableVerify] = useState(!authCode);
	const [error, setError] = useState('');

	useEffect(() => {
		API.get('auth/totp/platform_availability')
			.then(res => {
				logger(res);
				setAvailablePlatforms(res.data.platforms);
			})
			.catch(err => {
				setError(err.response.data.error);
			});
	}, []);

	const handleOTPComplete = (code) => {
		setAuthCode(code);
		setDisableVerify(false);
	}

	const handlePlatform = (platform) => {
		API.post('auth/totp/request', { platform })
			.then(() => {
				logger('2FA: Request sent');
			})
			.catch(err => {
				logger('2FA: Request failed');
				setError(err.response.data.error);
			});
	};

	const handleSubmit = (e) => {
		e.preventDefault();
		setDisableVerify(true);
		setError('');

		onSubmit(authCode);
	};

	return (
		<FormContainer onSubmit={handleSubmit}>
			<h1>Two Factor Authentication</h1>
			<p>Enter the 6-digit code generated by your chosen platform.</p>

            <OTPInputComponent handleOTPComplete={handleOTPComplete} />

            {error && <ErrorMessage>{error}</ErrorMessage>}

            <AvailablePlatformsContainer>
                {availablePlatforms.length > 0 ? availablePlatforms.map((platform) => (
                    <PlatformButton
                        key={platform}
                        type="button"
                        onClick={() => handlePlatform(platform)}
                    >
                        {platform === "email" && <i className="bi bi-envelope-fill" />} Email
                        {platform === "sms" && <i className="bi bi-chat-left-text-fill" />} SMS
                    </PlatformButton>
                )) : (
                    <p>No Available Platforms...</p>
                )}
            </AvailablePlatformsContainer>

            <AuthButton type="submit" disabled={disableVerify}>
                Verify
            </AuthButton>

            <AuthButton type="button" onClick={() => setIsTwoFactorAuth(false)}>
                Back
            </AuthButton>
		</FormContainer>
	);
};

export default TwoFactorAuthPassword;
