services:
  traefik:
    image: traefik:v2.5
    restart: always
    ports:
      - "8888:443"
      - "8080:8080"  # Added for Traefik dashboard
    networks:
      - transcendence
    volumes:
      - ./config/traefik:/etc/traefik
      - ./data/letsencrypt:/letsencrypt
      - ./certs:/certs
    command:
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--entrypoints.websecure.address=:443"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--providers.file.watch=true"
      - "--providers.docker=true"
      - "--log.level=DEBUG"  # Added for more verbose logging

  postgres:
    image: postgres
    restart: always
    env_file: .env
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - transcendence

  frontend:
    build: ./frontend
    restart: always
    env_file: .env
    networks:
      - transcendence
    volumes:
      - ./certs:/certs
    ports:
      - 3000:3000

  backend:
    build: ./backend
    restart: always
    env_file: .env
    networks:
      - transcendence
    volumes:
      - ./data/exports:/exports
      - ./certs:/certs

  # gameserver:
  #   build: ./gameserver
  #   restart: always
  #   env_file: .env
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.gameserver.rule=PathPrefix(`/ws`)"
  #     - "traefik.http.services.gameserver.loadbalancer.server.port=8080"
  #   ports:
  #     - 8080:8080
  #   networks:
  #     - transcendence

  harvester:
    build: ./harvester
    restart: always
    env_file: .env
    volumes:
      - ./data/exports:/exports
      - ./certs:/certs
    networks:
      - transcendence

  statcruncher:
    build: ./statcruncher
    restart: always
    env_file: .env
    networks:
      - transcendence
    volumes:
      - ./certs:/certs

networks:
  transcendence:
    driver: bridge
